name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]
        exclude:
          # Python 3.12 on Windows has some compatibility issues with our test suite
          - os: windows-latest
            python-version: 3.12

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with Ruff
      run: |
        ruff check .

    - name: Format check with Black
      run: |
        black --check .

    - name: Security scan with Bandit
      run: |
        bandit -r SABnzbd plex plex-api

    - name: Build tools
      run: |
        python build.py --all --clean --verbose --output-dir build_output

    - name: Copy built tools to main directories
      run: |
        cp -r build_output/plex/* plex/
        cp -r build_output/SABnzbd/* SABnzbd/
        cp -r build_output/plex-api/* plex-api/
        rm -rf build_output

    - name: Test source tools
      run: |
        python tests/run_tests.py --categories unit --verbose

    - name: Test built tools
      run: |
        python tests/run_tests.py --built-tools --categories unit --verbose

    - name: Run integration tests (Linux only)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        python tests/run_tests.py --categories integration --verbose

    - name: Run integration tests on built tools (Linux only)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        python tests/run_tests.py --built-tools --categories integration --verbose

    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        python tests/run_tests.py --coverage --cov-term --categories unit

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v4
      with:
        file: ./results/coverage.xml
        flags: unittests
        name: codecov-umbrella