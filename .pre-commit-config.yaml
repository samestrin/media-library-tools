# Pre-commit hooks for Media Library Tools
# Install with: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Black code formatter
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        exclude: ^
          (
            tests/fixtures/.*|
            tests/test_data/.*|
            __pycache__/.*
          )

  # Ruff linter (replaces flake8, isort, and more)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^
          (
            tests/fixtures/.*|
            tests/test_data/.*|
            __pycache__/.*
          )

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^
          (
            tests/fixtures/.*|
            tests/test_data/.*
          )
      - id: end-of-file-fixer
        exclude: ^
          (
            tests/fixtures/.*|
            tests/test_data/.*
          )
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-executables-have-shebangs
        exclude: ^
          (
            tests/.*|
            .*\.py$
          )
      - id: check-shebang-scripts-are-executable
        exclude: ^
          (
            tests/.*
          )

  # Python-specific checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
        exclude: ^
          (
            tests/.*
          )

  # Security scanning with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args:
          [
            "-r",
            ".",
            "--exclude",
            "tests/fixtures,tests/test_data,venv,.venv,__pycache__,results"
          ]

# Configuration
default_language_version:
  python: python3

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
