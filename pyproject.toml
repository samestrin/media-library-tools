[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "media-library-tools"
version = "1.0.0"
description = "Self-contained Python CLI utilities for managing media libraries (Plex, SABnzbd, qBittorrent)"
readme = "README.md"
requires-python = ">=3.7"
authors = [
    {name = "Sam Estrin", email = "sam@samestrin.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities"
]
keywords = ["media", "plex", "sabnzbd", "qbittorrent", "cli", "automation", "cleanup"]

[project.urls]
Homepage = "https://github.com/samestrin/media-library-tools"
Repository = "https://github.com/samestrin/media-library-tools"
Issues = "https://github.com/samestrin/media-library-tools/issues"

# Development dependencies (NOT runtime dependencies)
[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.6,<2.0"
]

# Black configuration for code formatting
[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | tests/fixtures
    | tests/test_data
  )/
)
'''

# Ruff configuration for linting
[tool.ruff]
line-length = 88
target-version = "py37"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex (we'll handle this manually)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert statements in tests

[tool.ruff.lint.isort]
known-first-party = ["tests"]

# Pre-commit configuration reference
# Create .pre-commit-config.yaml separately if needed
